#!/bin/bash
# Software License Agreement (BSD)
#
# Author    Mike Purvis <mpurvis@clearpathrobotics.com>
# Copyright (c) 2014-2016, Clearpath Robotics, Inc., All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that
# the following conditions are met:
# * Redistributions of source code must retain the above copyright notice, this list of conditions and the
#   following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other materials provided with the distribution.
# * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or
#   promote products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

ROS_DISTRO=${ROS_DISTRO:-melodic}
ROS_CONFIGURATION=${ROS_CONFIGURATION:-desktop_full}
ROS_EXTRA_PACKAGES=${ROS_EXTRA_PACKAGES:-}
ROS_INSTALL_DIR=${ROS_INSTALL_DIR:-/usr/local/opt/ros/${ROS_DISTRO}}

ROOT_DIR=$PWD

do_install()
{
  set -e

  # Homebrew
  if ! hash brew 2>/dev/null; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    echo export PATH='/usr/local/bin:$PATH' >> ~/.bash_profile
    source ~/.bash_profile
    brew doctor
  fi
  brew update
  brew upgrade

  # XQuartz
  if ! hash Xquartz 2>/dev/null; then
    brew tap homebrew/cask
    brew cask install xquartz
    echo "Log out and in to finalize XQuartz setup."
    exit 0
  fi

  # Check for root-owned stuff in /usr/local
  if [ $(find /usr/local/* -maxdepth 3 -type d -user root | wc -l) -gt 1 ]; then
    echo "Looks like you have some stuff owned by the root user in /usr/local. The installation can"
    echo "continue, but if there are pip packages which were installed using sudo, this will be a"
    echo "problem if rosdep tries to update them. If you have issues installing dependencies, consider"
    echo "nuking your Homebrew installation and starting from scratch:"
    echo
    echo "    https://gist.github.com/mxcl/1173223"
    echo
    echo "Alternatively, you could try chowning the contents of /usr/local to yourself:"
    echo
    echo "    sudo chown -R $USER:admin /usr/local/*"
  fi

    # Brewed Python
  if [ ! "$(which python3)" = "/usr/local/bin/python3" ]; then
    brew install python
    mkdir -p ~/Library/Python/3.7/lib/python/site-packages
    echo "$(brew --prefix)/lib/python3.7/site-packages" >> ~/Library/Python/3.7/lib/python/site-packages/homebrew.pth
  fi
  export PATH=$HOME/Library/Python/3.7/bin:$PATH

  # This tap gives us formulae for Gazebo and its dependencies, including SDF.
  brew tap osrf/simulation

  # Build tools
  brew install cmake ninja pkg-config || true

  # ROS infrastructure tools
  brew install boost-python3 fltk osrf/simulation/gazebo11 gpgme lz4 opencv@3 orocos-kdl pcl poco yaml-cpp
  # pip3 install --user -U defusedxml empy pycryptodome
  # pip3 install --user -U wxPython
  # pip3 install --user -U wstool rosdep rosinstall rosinstall_generator rospkg catkin-pkg
  # pip3 install --user -U catkin_tools bloom empy sphinx pycurl netifaces
  pip3 install -U -r requirements.txt --user

  . ./env3.sh

  # Initialize and update rosdep
  if [ ! -d /etc/ros/rosdep/ ]; then
    echo "This sudo prompt is to initialize rosdep (creates the /etc/ros/rosdep path)."
    sudo rosdep init
  fi
  if [ ! -f /etc/ros/rosdep/sources.list.d/30-missing.list ]; then
    echo "yaml https://raw.githubusercontent.com/hguandl/ros-install-osx/master/osx-missing.yaml osx" | \
      sudo tee /etc/ros/rosdep/sources.list.d/30-missing.list
  fi
  rosdep update

  # Remove previous workspace if present, create and enter new one.
  WS="${ROS_DISTRO}-${ROS_CONFIGURATION}-ws"
  if [ -d "$WS" ]; then
    rm -rf "$WS"
  fi
  mkdir $WS
  cd $WS


  # Get standard source
  rosinstall_generator ${ROS_CONFIGURATION} ${ROS_EXTRA_PACKAGES} --rosdistro ${ROS_DISTRO} --deps --tar > ${WS}.rosinstall
  wstool init -j8 src ${WS}.rosinstall

  # Patch src files
  /usr/local/bin/python3 $ROOT_DIR/patch.py $ROOT_DIR/$WS/src

  # Package dependencies.
  rosdep install --from-paths src --ignore-src --rosdistro ${ROS_DISTRO} -y --skip-keys google-mock || true

  # Clean out or create the install directory.
  if [ -d ${ROS_INSTALL_DIR} ]; then
    rm -rf ${ROS_INSTALL_DIR}/*
  else
    mkdir -p ${ROS_INSTALL_DIR}
  fi

  ./src/catkin/bin/catkin_make_isolated --install \
                                        --use-ninja \
                                        --install-space $ROS_INSTALL_DIR \
                                        -DCATKIN_ENABLE_TESTING=OFF \
                                        -DCMAKE_BUILD_TYPE=Release \
                                        -DCMAKE_CXX_STANDARD=14 \
                                        -DCMAKE_FIND_FRAMEWORK=LAST \
                                        -DCMAKE_INSTALL_RPATH=$INSTALL_SPACE/lib \
                                        -DCMAKE_MACOSX_RPATH=ON \
                                        -DPYTHON_VERSION=3.7

  echo "Installation successful, please source the ROS workspace:"
  echo
  echo "  source ${ROS_INSTALL_DIR}/setup.sh"
  echo
}

do_install
